/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface;

import ManagedBeans.Database;
import java.awt.GridLayout;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JFrame;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JList;
import java.util.List;
import javax.swing.JPanel;


/**
 *
 * @author Johanne
 */

public class CreateOrder_addanimal extends javax.swing.JPanel{
    private Integer id_client;
    private List<Integer> listAnimauxChoisi;

    
    
    /**
     * Creates new form CreateOrder_addanimal
     * @param listAnimauxChoisi
     * @param id_client
     * @throws java.sql.SQLException
     */
    public CreateOrder_addanimal(List<Integer> listAnimauxChoisi, Integer id_client) throws SQLException{
      this.id_client=id_client;
      this.listAnimauxChoisi=listAnimauxChoisi;
      initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() throws SQLException {
        Database DB = new Database();
        
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        search_animal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        add_animal_button = new javax.swing.JButton();
        confirm_button = new javax.swing.JButton();
        cancel_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        
        listAnimal = DB.getJListAnimalCustomer(id_client,"");

        jLabel1.setText("Selectionner un Animal");

        jLabel2.setText("Entrer les 3 premières lettres");

        search_animal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_animalKeyReleased(evt);
            }
        });

        jLabel3.setText("Ou");

        add_animal_button.setText("Ajouter Animal");
        add_animal_button.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_animal_buttonActionPerformed(evt);
            }
        });

        confirm_button.setText("Valider");
        confirm_button.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm_buttonActionPerformed(evt);
            }
        });

        cancel_button.setText("Annuler");
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_buttonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listAnimal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(confirm_button)
                        .addGap(44, 44, 44)
                        .addComponent(cancel_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(search_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(add_animal_button))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_animal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(add_animal_button))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirm_button)
                    .addComponent(cancel_button))
                .addContainerGap(26, Short.MAX_VALUE))
        );

    }// </editor-fold>                        

    private void search_animalKeyReleased(java.awt.event.KeyEvent evt) {
        int taille_chaine = 0;
        String chaine = search_animal.getText();
        taille_chaine = chaine.length();
        if ((taille_chaine > 2)) {
          Database instance = new Database();
            try {               
                listAnimal = (JList) instance.getJListAnimalCustomer(id_client,chaine);
                jScrollPane1.setViewportView(listAnimal);
                
           } catch (SQLException ex) {
                System.out.println("SQLException: " + ex.getMessage());
               System.out.println("SQLState: " + ex.getSQLState());
               System.out.println("VendorError: " + ex.getErrorCode());
            }

        }
        else {
            Database instance = new Database();
            try {               
                listAnimal = (JList) instance.getJListAnimalCustomer(id_client,"");
                jScrollPane1.setViewportView(listAnimal);
                
           } catch (SQLException ex) {
               
                System.out.println("SQLException: " + ex.getMessage());
               System.out.println("SQLState: " + ex.getSQLState());
               System.out.println("VendorError: " + ex.getErrorCode());
            }

        }

        
    }                                             

    private void add_animal_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // ajouter panel de teddy
    }                                                 

    private ArrayList cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        this.setVisible(false);
        System.out.println(listAnimauxChoisi);
        return (ArrayList) listAnimauxChoisi;
        
    }                                             

    private void confirm_buttonActionPerformed(java.awt.event.ActionEvent evt) { 
        
        System.out.println(listAnimal.getSelectedValue());
        
        String id_select=(String) listAnimal.getSelectedValue();
        int id_added_animal;
        int fin_id=id_select.indexOf(": ");
        id_added_animal=Integer.parseInt(id_select.substring(0,(fin_id)));
        System.out.println("id_animal");
        System.out.println(id_added_animal);
        listAnimauxChoisi.add(id_added_animal);
       
        int first_animal = (Integer)listAnimauxChoisi.get(0);
        
        System.out.println(first_animal);
                for(int i = 0; i < listAnimauxChoisi.size(); i++)
                    {
                        System.out.println("donnée à l'indice " + i + " = " + listAnimauxChoisi.get(i));
                        }
        Database instance = new Database();
        try {
         
         
         listAnimal =instance.getJListAnimalCustomer(first_animal);
         jScrollPane1.setViewportView(listAnimal);
                
         } catch (SQLException ex) {
             System.out.println("SQLException: " + ex.getMessage());
             System.out.println("SQLState: " + ex.getSQLState());
             System.out.println("VendorError: " + ex.getErrorCode());
            }
                
        
    }                                              


    // Variables declaration - do not modify                     
    private javax.swing.JButton add_animal_button;
    private javax.swing.JButton cancel_button;
    private javax.swing.JButton confirm_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList listAnimal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField search_animal;
    // End of variables declaration
    
    /**
     *
     * @param args
     * @throws SQLException
     */
    public static void main(String[] args) throws SQLException {
        JFrame myFrame = new JFrame("Test interface");
        Integer id_client = 16;
        List<Integer> listAnimauxChoisi = new ArrayList<>();
        CreateOrder_addanimal test = new CreateOrder_addanimal(listAnimauxChoisi,id_client);
        myFrame.setLayout(new GridLayout(1, 2));
        myFrame.add(test);
        myFrame.pack();
        myFrame.setVisible(true);
        myFrame.setDefaultCloseOperation(EXIT_ON_CLOSE);
        for(int i = 0; i < listAnimauxChoisi.size(); i++)
    {
      System.out.println("donnée à l'indice " + i + " = " + listAnimauxChoisi.get(i));
    }
        
    }

}
